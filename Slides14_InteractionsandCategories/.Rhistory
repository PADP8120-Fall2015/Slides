library(ggplot2);library(ggthemes)
fit <- lm(vocabulary ~ education + sex, data = data)
tidy(fit)
library(dplyr)
library(ggplot2);library(ggthemes)
library(broom)
fit <- lm(vocabulary ~ education + sex, data = data)
tidy(fit)
data <- read.table("data/Vocabulary.txt", header=TRUE)
data <- tbl_df(data)
fit <- lm(vocabulary ~ education + female, data = data)
fit.df <- tidy(fit)
print(fit.df)
fit <- lm(vocabulary ~ education + sex, data = data)
tidy(fit)
plot(fit)
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual')
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual')
p
?geom_abline
fit
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') +
geom_smooth(aes(group=sexMale),method='lm')
head(data)
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') +
geom_smooth(aes(group=sex),method='lm')
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') +
geom_smooth(aes(group=sex),method='lm',size=10)
p + geom_jitter(alpha = .5) + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') +
geom_smooth(aes(group=sex),method='lm')
p + geom_jitter(alpha = .5) + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw()
geom_smooth(aes(group=sex),method='lm')
p + geom_jitter(alpha = .5) + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm')
p + geom_jitter(alpha = .5) + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex,x=education,y=vocabulary),method='lm')
p + geom_jitter(alpha = .5) + theme(legend.position = c(17.5,18)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm')
p + geom_jitter(alpha = .5) + theme(legend.position = c(17,18)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm')
?theme
p + geom_jitter(alpha = .5) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm') +
theme(legend.position = c(17,18))
p + geom_jitter(alpha = .5) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm') +
theme(legend.position = c(15,1)
)
p + geom_jitter(alpha = .3) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm') +
theme(legend.position = c(15,1))
p + geom_jitter(alpha = .3) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',size=4) +
theme(legend.position = c(15,1))
p + geom_jitter(alpha = .3) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',size=4,lty=2) +
theme(legend.position = c(15,1))
p + geom_jitter(alpha = .3) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',size=4,lty=2) +
theme(legend.position = c(.8,.1))
p + geom_jitter(alpha = .3) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',size=4,lty=2) +
theme(legend.position = c(.9,.1))
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter() + theme(legend.position = c(2.5,8.75)) +
scale_colour_brewer(palette=2,type='qual')
data <- mutate(data, female = as.numeric(sex=="Female"))
data
fit <- lm(vocabulary ~ education + female, data = data)
fit.df <- tidy(fit)
print(fit.df)
fit <- lm(vocabulary ~ education + sex, data = data)
tidy(fit)
fit <- lm(vocabulary ~ education + female, data = data)
fit.df <- tidy(fit)
print(fit.df)
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter() + theme(legend.position = c(.8,.1)) +
scale_colour_brewer(palette=2,type='qual') + theme_bw()
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter() + scale_colour_brewer(palette=2,type='qual') +
theme_bw() + theme(legend.position = c(.8,.1))
p + geom_jitter(alpha = .1) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',lty=2) +
theme(legend.position = c(.9,.1))
p + geom_jitter(alpha = .1) +
scale_colour_brewer(palette=2,type='qual') + theme_bw() +
geom_smooth(aes(group=sex),method='lm',lty=2,size=2) +
theme(legend.position = c(.9,.1))
?geom_smooth
head(data)
tidy(lm(vocabulary ~ education + female, data = data))
(fit.df <- tidy(lm(vocabulary ~ education + female, data = data)))
inter.male <- as.numeric(filter(fit.df, term=="(Intercept)") %>%
select(estimate))
inter.female <- inter.male + as.numeric(filter(fit.df, term=="female") %>%
select(estimate))
slope <- as.numeric(filter(fit.df, term=="education") %>%
select(estimate))
inter.male
line.size <- 2
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("pink", "blue")) +
geom_abline(intercept = inter.male, slope = slope, colour="orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="green", size=line.size)
line.size <- 2
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("orange", "green")) +
geom_abline(intercept = inter.male, slope = slope, colour="orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="green", size=line.size)
line.size <- 2
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("dark orange", "dark green")) +
geom_abline(intercept = inter.male, slope = slope, colour="dark orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="dark green", size=line.size)
line.size <- 2
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("dark orange", "dark green")) +
geom_abline(intercept = inter.male, slope = slope, colour="dark orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="dark green", size=line.size)
line.size <- 2
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("dark green","dark orange")) +
geom_abline(intercept = inter.male, slope = slope, colour="dark orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="dark green", size=line.size)
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter(alpha=0.3) +
scale_color_manual(values = c("dark green","dark orange")) +
geom_abline(intercept = inter.male, slope = slope, colour="dark orange", size=line.size) +
geom_abline(intercept = inter.female, slope = slope, colour="dark green", size=line.size) + theme_bw() + theme(legend.position = c(.9,1))
fit.df
data <- read.table("data/Prestige.txt", header=TRUE)
head(data)
data <- tbl_df(data)
data
data <- read.table("data/Prestige.txt", header=TRUE)
head(data)
data <- tbl_df(data)
head(data)
data <- read.table("data/Prestige.txt", header=TRUE)
data$occupation <- rownames(data)
rownames(data) <- NULL
data <- tbl_df(data)
data <- filter(data, !is.na(type))
data
head(data)
p <- ggplot(data, aes(x=education, y=prestige))
p + geom_jitter() + stat_smooth(method = "lm")
p + geom_jitter() + stat_smooth(method = "lm") + theme_bw()
p <- ggplot(data, aes(x=education, y=prestige))
p + geom_jitter() +
facet_grid(. ~ type) +
stat_smooth(method = "lm")
data$type
fit <- lm(prestige ~ education + type, data = data)
fit.df <- tidy(fit)
print(fit.df)
fit <- lm(prestige ~ education + type, data = data)
fit.df <- tidy(fit)
print(fit.df)
inter.bc <- as.numeric(filter(fit.df, term=="(Intercept)") %>%
select(estimate))
inter.prof <- inter.bc + as.numeric(filter(fit.df, term=="typeprof") %>%
select(estimate))
inter.wc <- inter.bc + as.numeric(filter(fit.df, term=="typewc") %>%
select(estimate))
slope <- as.numeric(filter(fit.df, term=="education") %>%
select(estimate))
inter.bc <- as.numeric(filter(fit.df, term=="(Intercept)") %>%
select(estimate))
inter.prof <- inter.bc + as.numeric(filter(fit.df, term=="typeprof") %>%
select(estimate))
inter.wc <- inter.bc + as.numeric(filter(fit.df, term=="typewc") %>%
select(estimate))
slope <- as.numeric(filter(fit.df, term=="education") %>%
select(estimate))
line.size <- 2
p <- ggplot(data, aes(x=education, y=prestige, colour=type))
p + geom_jitter(alpha=0.7) +
scale_color_manual(values = c("blue", "green", "white")) +
geom_abline(intercept = inter.bc, slope = slope, colour="blue", size=line.size) +
geom_abline(intercept = inter.prof, slope = slope, colour="green", size=line.size) +
geom_abline(intercept = inter.wc, slope = slope, colour="white", size=line.size) +
expand_limits(x = 0, y = 0)
p <- ggplot(data, aes(x=education, y=prestige, colour=type))
p + geom_jitter(alpha=0.7) +
scale_color_manual(values = c("blue", "green", "white")) +
geom_abline(intercept = inter.bc, slope = slope, colour="blue", size=line.size) +
geom_abline(intercept = inter.prof, slope = slope, colour="green", size=line.size) +
geom_abline(intercept = inter.wc, slope = slope, colour="white", size=line.size) +
expand_limits(x = 0, y = 0) + theme(legend.position=c(.85,.1))
p <- ggplot(data, aes(x=education, y=prestige, colour=type))
p + geom_jitter(alpha=0.7) +
scale_color_manual(values = c("blue", "green", "white")) +
geom_abline(intercept = inter.bc, slope = slope, colour="blue", size=line.size) +
geom_abline(intercept = inter.prof, slope = slope, colour="green", size=line.size) +
geom_abline(intercept = inter.wc, slope = slope, colour="white", size=line.size) +
expand_limits(x = 0, y = 0) + theme(legend.position=c(.85,.2))
data <- read.table("data/Vocabulary.txt", header=TRUE)
data <- tbl_df(data)
p <- ggplot(data, aes(x=education, y=vocabulary, colour=sex))
p + geom_jitter() +
scale_color_manual(values = c("dark green", "dark orange"))
data <- mutate(data, female = as.numeric(sex=="Female"))
fit <- lm(vocabulary ~ education + female + education:female, data = data)
fit.df <- tidy(fit)
print(fit.df)
fit
fit$coefficients
p <- ggplot(data, aes(x=education, y=prestige))
p + geom_jitter() + theme_bw()
facet_grid(. ~ type) +
stat_smooth(method = "lm")
data <- read.table("data/Prestige.txt", header=TRUE)
data$occupation <- rownames(data)
rownames(data) <- NULL
data <- tbl_df(data)
data <- filter(data, !is.na(type))
head(data)
suppressPackageStartupMessages(library(dplyr))
load("data/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc, sex) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc), !is.na(sex))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gss <- mutate(gss, female = as.numeric(sex=="female"))
suppressPackageStartupMessages(library(dplyr))
load("data/gss_2010_training.RData")
par(mfrow=c(1,2))
p1
p2
p1 <- ggplot(gss, aes(x=educ, y=income, col=sex))
(p1 <- p1 + geom_jitter() +
scale_color_manual(values = c("blue", "dark green")) +
geom_abline(intercept = inter, slope = slope.male, col="blue") +
geom_abline(intercept = inter, slope = slope.female, col="dark green"))
p1 <- ggplot(gss, aes(x=educ, y=income, col=sex))
suppressPackageStartupMessages(library(dplyr))
load("data/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc, sex) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc), !is.na(sex))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gss <- mutate(gss, female = as.numeric(sex=="female"))
getwd()
setwd('/Users/TScott/Google Drive/Course_Materials/PADP8120_Fall2015/Slides/Slides15_InteractionsandCategories/')
suppressPackageStartupMessages(library(dplyr))
getwd()
load("data/gss_2010_training.RData")
gss.training <- tbl_df(gss.training)
gss <- select(gss.training, income06_n, educ, maeduc, paeduc, sex) %>%
filter(!is.na(income06_n), !is.na(educ), !is.na(maeduc), !is.na(paeduc), !is.na(sex))
# NOTE: DROPPING MISSING DATA LIKE THIS CAN BE DANGEROUS
gss <- rename(gss, income = income06_n)
gss <- mutate(gss, female = as.numeric(sex=="female"))
inter <- as.numeric(filter(fit.df, term=="(Intercept)") %>%
select(estimate))
slope.male <- as.numeric(filter(fit.df, term=="educ") %>%
select(estimate))
slope.female <- slope.male + as.numeric(filter(fit.df, term=="educ:female") %>%
select(estimate))
p1 <- ggplot(gss, aes(x=educ, y=income, col=sex))
(p1 <- p1 + geom_jitter() +
scale_color_manual(values = c("blue", "dark green")) +
geom_abline(intercept = inter, slope = slope.male, col="blue") +
geom_abline(intercept = inter, slope = slope.female, col="dark green"))
fit <- lm(income ~ educ + female + educ:female, data = gss)
fit.df <- tidy(fit)
inter.male <- as.numeric(filter(fit.df, term=="(Intercept)") %>%
select(estimate))
inter.female <- inter.male + as.numeric(filter(fit.df, term=="female") %>%
select(estimate))
slope.male <- as.numeric(filter(fit.df, term=="educ") %>%
select(estimate))
slope.female <- slope.male + as.numeric(filter(fit.df, term=="educ:female") %>%
select(estimate))
p2 <- ggplot(gss, aes(x=educ, y=income, col=sex))
(p2 <- p2 + geom_jitter() +
scale_color_manual(values = c("blue", "dark green")) +
geom_abline(intercept = inter.male, slope = slope.male, col="blue") +
geom_abline(intercept = inter.female, slope = slope.female, col="dark green"))
par(mfrow=c(1,2))
p1
p2
fit <- lm(income ~ educ + female + educ:female, data = gss)
tidy(fit)
fit <- lm(income ~ educ + female + educ:female, data = gss)
tidy(fit)
fit$coefficients
fit$coefficients['educ']
fit$coefficients['educ:female']
fit <- lm(income ~ educ + female + educ:female, data = gss)
tidy(fit)
gss$maeduc
